import os
import json
from dotenv import load_dotenv
from telegram import (
    Update,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton,
    WebAppInfo,
)
from telegram.ext import CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
WEBAPP_URL = os.getenv("WEBAPP_URL")
GROUP_ID = os.getenv("GROUP_ID")  # –ü—Ä–∏–º–µ—Ä: "-1002509743859"

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üåç –ñ–∏–≤—É –≤‚Ä¶", web_app=WebAppInfo(url=WEBAPP_URL))]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞–Ω—É –∏ –≥–æ—Ä–æ–¥:",
        reply_markup=reply_markup
    )

# –ö–æ–º–∞–Ω–¥–∞ /getchatid ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç chat_id —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
async def get_chat_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"Chat ID: {chat_id}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ WebApp –¥–∞–Ω–Ω—ã—Ö
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        data = json.loads(update.message.web_app_data.data)
        country = data.get("country")
        city = data.get("city")
        action = data.get("action")
        category = data.get("category")
        contact = data.get("contact")
        text = data.get("text")

        if country == "–ì–µ—Ä–º–∞–Ω–∏—è" and city == "–ì–µ–ª—å–¥–µ—Ä–Ω":
            if action == "view":
                await update.message.reply_text(
                    "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –¥–ª—è –ì–µ–ª—å–¥–µ—Ä–Ω–∞:",
                    reply_markup=InlineKeyboardMarkup([
                        [InlineKeyboardButton("üë• –ì—Ä—É–ø–ø–∞ @zhivuv_gelderne", url="https://t.me/zhivuv_gelderne")]
                    ])
                )
            elif action == "add":
                post = f"""üìç <b>{city}, {country}</b>
üìÇ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {category}
üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b> {contact}
üìù <b>–¢–µ–∫—Å—Ç:</b> {text}
"""

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ user_data
                context.user_data["last_post"] = post

                # –ü—É–±–ª–∏–∫—É–µ–º –≤ –≥—Ä—É–ø–ø—É
                await context.bot.send_message(
                    chat_id=GROUP_ID,
                    text=post,
                    parse_mode="HTML"
                )

                await update.message.reply_text(
                    "‚úÖ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –≥—Ä—É–ø–ø–µ.\n"
                    "üì∏ –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ ‚Äî —è –¥–æ–±–∞–≤–ª—é –µ—ë –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—é."
                )
        else:
            await update.message.reply_text(
                "‚õî –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥–æ—Ä–æ–¥–∞ –ì–µ–ª—å–¥–µ—Ä–Ω (–ì–µ—Ä–º–∞–Ω–∏—è)."
            )
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")
        print(f"[–û–®–ò–ë–ö–ê] handle_webapp_data: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        photo = update.message.photo[-1]
        file_id = photo.file_id

        await context.bot.send_photo(
            chat_id=GROUP_ID,
            photo=file_id,
            caption="üì∏ –§–æ—Ç–æ –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—é"
        )

        await update.message.reply_text("‚úÖ –§–æ—Ç–æ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—é.")
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ.")
        print(f"[–û–®–ò–ë–ö–ê] handle_photo: {e}")

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
def setup_handlers(app):
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("getchatid", get_chat_id))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    app.add_handler(MessageHandler(filters.PHOTO, handle_photo))
