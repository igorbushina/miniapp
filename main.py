import os
import logging
import asyncio
from dotenv import load_dotenv
from telegram.ext import ApplicationBuilder
from handlers import setup_handlers

# üîß –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # https://your-app.onrender.com/webhook
WEBHOOK_PATH = os.getenv("WEBHOOK_PATH", "/webhook")  # –ù–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ ApplicationBuilder
PORT = int(os.getenv("PORT", 10000))

# üßæ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
)
logger = logging.getLogger(__name__)

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
application = ApplicationBuilder().token(TOKEN).build()

# üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤
setup_handlers(application)
logger.info("‚úÖ –•–µ–Ω–¥–ª–µ—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã.")

# üöÄ –ó–∞–ø—É—Å–∫ webhook
async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞...")
    await application.bot.set_webhook(url=WEBHOOK_URL + WEBHOOK_PATH)
    logger.info(f"üåê Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL + WEBHOOK_PATH}")
    await application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL + WEBHOOK_PATH,
        allowed_updates=["message", "callback_query"]
    )

if __name__ == "__main__":
    asyncio.run(main())
