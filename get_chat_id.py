import asyncio
import os
from telegram import Bot, Update
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

if not TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ .env")

async def main():
    bot = Bot(token=TOKEN)

    try:
        updates = await bot.get_updates()
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return

    if not updates:
        print("‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π. –û—Ç–ø—Ä–∞–≤—å –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤—å –µ–≥–æ –≤ –≥—Ä—É–ø–ø—É.")
        return

    print("üì¨ –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
    for update in updates:
        message = update.message or update.channel_post
        if message:
            chat = message.chat
            chat_info = f"""
üîπ Chat ID: {chat.id}
üîπ –¢–∏–ø: {chat.type}
üîπ –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title or '‚Äî'}
üîπ Username: @{chat.username or '‚Äî'}
""".strip()
            print(chat_info)

if __name__ == "__main__":
    asyncio.run(main())
